<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title></title>
		<description>An elder's memo.</description>
		<link>/</link>
		<atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>CNTK pros cons</title>
				<description>&lt;h2 id=&quot;pros&quot;&gt;pros&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The concept of computation graph is clear, easy to understand.&lt;/li&gt;
&lt;li&gt;Building the network using NDL is fast.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;cons&quot;&gt;cons&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The syntax of config file is not familiar, may be using the json format or python is better to learn.&lt;/li&gt;
&lt;li&gt;The document is not yet complete, and some command in the examples are not listed in the document.&lt;/li&gt;
&lt;li&gt;Text processing reader (i.e., LM sequence reader, LU sequence reader) is hared to understand, it’s kind of counterintuitive.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, &lt;strong&gt;It is hard to master CNTK, and it is not the time to using it.&lt;/strong&gt;&lt;/p&gt;
</description>
				<pubDate>Mon, 07 Mar 2016 00:00:00 +0800</pubDate>
				<link>/tools/2016/03/07/cntk-pros-and-cons.html</link>
				<guid isPermaLink="true">/tools/2016/03/07/cntk-pros-and-cons.html</guid>
			</item>
		
			<item>
				<title>Computational Network Toolkit</title>
				<description>&lt;ul&gt;
&lt;li&gt;A computational network is a style of computation where data flows through a graph and computations happen in the nodes of the graph.&lt;/li&gt;
&lt;li&gt;A user specifies a network using a simple text configuration file. The configuration file specifies the type of network, where to find the input data, and how to optimize the parameters. All of these design parameters are fixed in the configuration file.&lt;/li&gt;
&lt;li&gt;All configuration values are specified as a name-value pair. A value can be a numeric, a string, a list, or even a block of configurations.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;top-level-configurations&quot;&gt;&lt;a href=&quot;https://github.com/Microsoft/CNTK/wiki/Top-level-configurations&quot;&gt;Top level configurations&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;ModelDir &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;$OutputDir$/Models&amp;quot;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;#define a variable&lt;/span&gt;
modelPath &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;$ModelDir$/01_OneHidden&amp;quot;&lt;/span&gt;
command&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;mnistTrain
deviceId &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;# auto, -1 for CPU, &amp;gt;=0 to use a specific GPU&lt;/span&gt;
precision &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;float&amp;quot;&lt;/span&gt;
traceLevel &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;# larger values mean more output&lt;/span&gt;
stderr &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;c:\cntk\log\cntk&amp;quot;&lt;/span&gt;
NumCPUThreads &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;# By default the value is 0, which means using what ever number of threads determined by MKL, ACML, or OpenMP. If a positive number is specified, the number of threads will not be larger than the value specified and the number of hardware concurrency. If a negative number is specified, the actual number of thread will be the sum of the number of hardware concurrency and this value floored at 1.&lt;/span&gt;

mnistTrain&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;[
    action&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;train&amp;quot;&lt;/span&gt;
    NDLNetworkBuilder&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;[
        networkDescription&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;c:\cntk\config\sample.ndl&amp;quot;&lt;/span&gt;
        run&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;ndlMacroUse
    ]

    SGD&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;[
        modelPath&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;c:\cntk\model\mnist.cn&amp;quot;&lt;/span&gt;
        learningRatesPerMB&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.001&lt;/span&gt;
        minibatchSize&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;32&lt;/span&gt;
        epochSize&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;60000&lt;/span&gt;
        maxEpochs&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;
    ]

    reader&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;[
        readerType&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;UCIFastReader&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;bu&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;c:\cntk\data\mnist\mnist_train.txt&amp;quot;&lt;/span&gt;
        features&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;[
            dim&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;784&lt;/span&gt;
            start&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;
        ]

        labels&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;[
            dim&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;
            start&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
            labelDim&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;
            labelMappingFile&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;c:\cntk\data\mnist\mnistlabels.txt&amp;quot;&lt;/span&gt;
        ]
    ]
]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span class=&quot;co&quot;&gt;#Variables&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;#A variable can contain a matrix or scalar value. Variables are immutable, and assigning new values to an existing variable is not supported.&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;#The special node names FeatureNodes, LabelNodes, CriterionNodes, EvalNodes, OutputNodes are also reserved and may not be used as variable names.&lt;/span&gt;
SDim&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;784&lt;/span&gt;
HDim&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;256&lt;/span&gt;
LDim&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;#Inputs&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;#Inputs are used to represent input data and labels associated with the samples. Input is a special function. They are represented as InputNodes internally and are not saved as part of the CN model.&lt;/span&gt;
features&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;Input(SDim, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)
labels&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;Input(LDim, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)

&lt;span class=&quot;co&quot;&gt;#Parameters&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;#Parameters are matrices that constitue the learned model upon completion of training. They are represendted as LearnableParameterNodes internally and are saved as part of the model.&lt;/span&gt;
W0&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;Parameter(HDim, SDim)
B0&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;Parameter(HDim, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)
W1&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;Parameter(LDim, HDim)
B1&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;Parameter(LDim, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)

&lt;span class=&quot;co&quot;&gt;#Functions&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;#Functions describe computation steps. Functions are implemented as computation nodes internally.&lt;/span&gt;
Times1&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;Times(W0, features)
Plus1&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;Plus(Times1, B0)
RL1&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;RectifiedLinear(Plus1)
Times2&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;Times(W1, RL1)
Plus2&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;Plus(Times2, B1)
&lt;span class=&quot;co&quot;&gt;#Training Criterion&lt;/span&gt;
CE&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;CrossEntropyWithSoftmax(labels, Plus2)
&lt;span class=&quot;co&quot;&gt;#Test Objective Function&lt;/span&gt;
ErrPredict&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;ErrorPrediction(labels, Plus2)
&lt;span class=&quot;co&quot;&gt;#Special Nodes&lt;/span&gt;
FeatureNodes&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;(features)
LabelNodes&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;(labels)
CriterionNodes&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;(CE)
EvalNodes&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;(ErrPredict)
OutputNodes&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;(Plus2)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;macros&quot;&gt;Macros&lt;/h2&gt;
&lt;h3 id=&quot;defining-macros&quot;&gt;Defining Macros&lt;/h3&gt;
&lt;p&gt;Macros can be defined as a one line function, or as a block of code.&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;RFF(x1, w1, b1) &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; RectifiedLinear(Plus(Times(w1, x1), b1))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A macro can also be defined as a block of code:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span class=&quot;co&quot;&gt;# Block macro to define a layer with a sigmoid activation function&lt;/span&gt;
DNNSigmoidLayer(inDim, outDim, x, parmScale) &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; [
    W &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; LearnableParameter(outDim, inDim, init&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;uniform&amp;quot;&lt;/span&gt;, initValueScale&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;parmScale) 
    b &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; LearnableParameter(outDim, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,     init&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;uniform&amp;quot;&lt;/span&gt;, initValueScale&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;parmScale) 
    t &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Times(W, x)
    z &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Plus(t, b)
    y &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Sigmoid(z)
]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;FF(X1, W1, B1)
{
    F &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; RFF(X1, W1, B1)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;#A macro may call another macro. However recursion(i.e., calling itself) is not supported. Semicolons are not required, but can be used if desired.&lt;/span&gt;
    T &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Times(W1, X1)
    FF &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Plus(T, B1) &lt;span class=&quot;co&quot;&gt;#The return value of a macro is defined by a local variable that has the same name as the macro. If no variable matches, the last variable in the macro will be returned.&lt;/span&gt;
}

FF.T &lt;span class=&quot;co&quot;&gt;#dot syntax.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;parameter-initialization&quot;&gt;Parameter initialization&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;B0 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Parameter(HDim, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, init&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;zero)
W0 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Parameter(Hdim, SDim, init&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;uniform&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;tagging-special-values&quot;&gt;Tagging special values&lt;/h3&gt;
&lt;p&gt;As an alternate to providing an array of special nodes that are used as features, labels, criteria, etc, optional parameters can be used.&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;features&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;Input(SDim, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, tag&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;feature&amp;quot;&lt;/span&gt;)
labels&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;Input(LDim, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, tag&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;label&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The acceptable tag names correspond to the special node types and are as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;feature&lt;/strong&gt;: feature input.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;label&lt;/strong&gt;: label input&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;criterion&lt;/strong&gt;: training criteria&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;eval&lt;/strong&gt;: evaluation node&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;output&lt;/strong&gt;: output node&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;model-editing-language-mel&quot;&gt;Model Editing Language (MEL)&lt;/h2&gt;
&lt;svg id=&quot;drawing&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; version=&quot;1.1&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:svgjs=&quot;http://svgjs.com/svgjs&quot; width=&quot;939&quot; height=&quot;622&quot; viewBox=&quot;56 58 939 622&quot;&gt;
&lt;defs id=&quot;SvgjsDefs1189&quot;&gt;&lt;marker id=&quot;SvgjsMarker1231&quot; markerWidth=&quot;16.23606797749979&quot; markerHeight=&quot;10.550836550532098&quot; refX=&quot;-1&quot; refY=&quot;3.8990363547948754&quot; viewBox=&quot;-1 -1.3763819204711738 16.23606797749979 10.550836550532098&quot; orient=&quot;auto&quot; markerUnits=&quot;userSpaceOnUse&quot;&gt;&lt;path id=&quot;SvgjsPath1232&quot; d=&quot;M12 3.8990363547948754L0 7.798072709589751V0Z &quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#323232&quot; transform=&quot;matrix(1,0,0,1,0,0)&quot;&gt;&lt;/path&gt;&lt;/marker&gt;&lt;marker id=&quot;SvgjsMarker1240&quot; markerWidth=&quot;16.23606797749979&quot; markerHeight=&quot;10.550836550532098&quot; refX=&quot;-1&quot; refY=&quot;3.8990363547948754&quot; viewBox=&quot;-1 -1.3763819204711738 16.23606797749979 10.550836550532098&quot; orient=&quot;auto&quot; markerUnits=&quot;userSpaceOnUse&quot;&gt;&lt;path id=&quot;SvgjsPath1241&quot; d=&quot;M12 3.8990363547948754L0 7.798072709589751V0Z &quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#323232&quot; transform=&quot;matrix(1,0,0,1,0,0)&quot;&gt;&lt;/path&gt;&lt;/marker&gt;&lt;marker id=&quot;SvgjsMarker1269&quot; markerWidth=&quot;16.23606797749979&quot; markerHeight=&quot;10.550836550532098&quot; refX=&quot;-1&quot; refY=&quot;3.8990363547948754&quot; viewBox=&quot;-1 -1.3763819204711738 16.23606797749979 10.550836550532098&quot; orient=&quot;auto&quot; markerUnits=&quot;userSpaceOnUse&quot;&gt;&lt;path id=&quot;SvgjsPath1270&quot; d=&quot;M12 3.8990363547948754L0 7.798072709589751V0Z &quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#323232&quot; transform=&quot;matrix(1,0,0,1,0,0)&quot;&gt;&lt;/path&gt;&lt;/marker&gt;&lt;marker id=&quot;SvgjsMarker1280&quot; markerWidth=&quot;16.23606797749979&quot; markerHeight=&quot;10.550836550532098&quot; refX=&quot;-1&quot; refY=&quot;3.8990363547948754&quot; viewBox=&quot;-1 -1.3763819204711738 16.23606797749979 10.550836550532098&quot; orient=&quot;auto&quot; markerUnits=&quot;userSpaceOnUse&quot;&gt;&lt;path id=&quot;SvgjsPath1281&quot; d=&quot;M12 3.8990363547948754L0 7.798072709589751V0Z &quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#323232&quot; transform=&quot;matrix(1,0,0,1,0,0)&quot;&gt;&lt;/path&gt;&lt;/marker&gt;&lt;marker id=&quot;SvgjsMarker1308&quot; markerWidth=&quot;16.23606797749979&quot; markerHeight=&quot;10.550836550532098&quot; refX=&quot;-1&quot; refY=&quot;3.8990363547948754&quot; viewBox=&quot;-1 -1.3763819204711738 16.23606797749979 10.550836550532098&quot; orient=&quot;auto&quot; markerUnits=&quot;userSpaceOnUse&quot;&gt;&lt;path id=&quot;SvgjsPath1309&quot; d=&quot;M12 3.8990363547948754L0 7.798072709589751V0Z &quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#323232&quot; transform=&quot;matrix(1,0,0,1,0,0)&quot;&gt;&lt;/path&gt;&lt;/marker&gt;&lt;marker id=&quot;SvgjsMarker1340&quot; markerWidth=&quot;16.23606797749979&quot; markerHeight=&quot;10.550836550532098&quot; refX=&quot;-1&quot; refY=&quot;3.8990363547948754&quot; viewBox=&quot;-1 -1.3763819204711738 16.23606797749979 10.550836550532098&quot; orient=&quot;auto&quot; markerUnits=&quot;userSpaceOnUse&quot;&gt;&lt;path id=&quot;SvgjsPath1341&quot; d=&quot;M12 3.8990363547948754L0 7.798072709589751V0Z &quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#323232&quot; transform=&quot;matrix(1,0,0,1,0,0)&quot;&gt;&lt;/path&gt;&lt;/marker&gt;&lt;/defs&gt;&lt;g id=&quot;SvgjsG1190&quot;&gt;&lt;path id=&quot;SvgjsPath1191&quot; d=&quot;M56 58H995V680H56V58Z &quot; fill-opacity=&quot;0&quot; fill=&quot;none&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1192&quot;&gt;&lt;g id=&quot;SvgjsG1193&quot; transform=&quot;translate(293 78)&quot; opacity=&quot;1&quot;&gt;&lt;path id=&quot;SvgjsPath1194&quot; d=&quot;M0 0L245 0L245 26L0 26Z &quot; stroke-dasharray=&quot;none&quot; stroke-width=&quot;0&quot; stroke=&quot;#323232&quot; fill=&quot;none&quot; opacity=&quot;1&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1195&quot; transform=&quot;matrix(1 0 0 1 0 3)&quot; fill=&quot;#ffffff&quot;&gt;&lt;text id=&quot;SvgjsText1196&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;16&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;122.5&quot; y=&quot;17&quot;&gt;Model Editing Language&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1197&quot; transform=&quot;translate(278 123)&quot; opacity=&quot;1&quot;&gt;&lt;path id=&quot;SvgjsPath1198&quot; d=&quot;M0 0L255 0L255 35L0 35Z &quot; stroke-dasharray=&quot;none&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#ffffff&quot; opacity=&quot;1&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1199&quot; transform=&quot;matrix(1 0 0 1 10 9.375)&quot; fill=&quot;#ffffff&quot;&gt;&lt;text id=&quot;SvgjsText1200&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;117.5&quot; y=&quot;14&quot;&gt;Loading and Setting Default Models&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1201&quot; transform=&quot;translate(76 121)&quot; opacity=&quot;1&quot;&gt;&lt;path id=&quot;SvgjsPath1202&quot; d=&quot;M0 0L178 0L178 129L0 129Z &quot; stroke-dasharray=&quot;2 3&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#ffffff&quot; opacity=&quot;1&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1203&quot; transform=&quot;matrix(1 0 0 1 10 23.875)&quot; fill=&quot;#ffffff&quot;&gt;&lt;text id=&quot;SvgjsText1204&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;79&quot; y=&quot;14&quot;&gt;If no model has been ex&lt;/text&gt;&lt;text id=&quot;SvgjsText1205&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;79&quot; y=&quot;30.25&quot;&gt;plicitly set to be the defa&lt;/text&gt;&lt;text id=&quot;SvgjsText1206&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;79&quot; y=&quot;46.5&quot;&gt;ult model, the last loade&lt;/text&gt;&lt;text id=&quot;SvgjsText1207&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;79&quot; y=&quot;62.75&quot;&gt;d or created model is us&lt;/text&gt;&lt;text id=&quot;SvgjsText1208&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;79&quot; y=&quot;79&quot;&gt;ed as a default.&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1209&quot;&gt;&lt;path id=&quot;SvgjsPath1210&quot; d=&quot;M254 185.5L266 185.5L266 140.5L278 140.5 &quot; stroke-dasharray=&quot;2 3&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;none&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1211&quot; transform=&quot;matrix(1 0 0 1 266 154.875)&quot; fill=&quot;#ffffff&quot;&gt;&lt;path id=&quot;SvgjsPath1212&quot; d=&quot;M0 0H0V0H0V0Z &quot; fill=&quot;#ffffff&quot; transform=&quot;translate(0 0)&quot;&gt;&lt;/path&gt;&lt;text id=&quot;SvgjsText1213&quot; font-family=&quot;Microsoft Yahei,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1214&quot; transform=&quot;translate(556 96)&quot; opacity=&quot;1&quot;&gt;&lt;path id=&quot;SvgjsPath1215&quot; d=&quot;M0 0L419 0L419 89L0 89Z &quot; stroke-dasharray=&quot;2 3&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#ffffff&quot; opacity=&quot;1&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1216&quot; transform=&quot;matrix(1 0 0 1 10 20.125)&quot; fill=&quot;#ffffff&quot;&gt;&lt;text id=&quot;SvgjsText1217&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;start&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;14&quot;&gt;model1 = LoadModel(“c:\models\mymodel.cn”, format=“cntk”&lt;/text&gt;&lt;text id=&quot;SvgjsText1218&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;start&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;30.25&quot;&gt;)&lt;/text&gt;&lt;text id=&quot;SvgjsText1219&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;start&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;46.5&quot;&gt;SetDefaultModel(model1)&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1220&quot;&gt;&lt;path id=&quot;SvgjsPath1221&quot; d=&quot;M556 140.5L544.5 140.5L544.5 140.5L533 140.5 &quot; stroke-dasharray=&quot;2 3&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;none&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1222&quot; transform=&quot;matrix(1 0 0 1 544.5 132.375)&quot; fill=&quot;#ffffff&quot;&gt;&lt;path id=&quot;SvgjsPath1223&quot; d=&quot;M0 0H0V0H0V0Z &quot; fill=&quot;#ffffff&quot; transform=&quot;translate(0 0)&quot;&gt;&lt;/path&gt;&lt;text id=&quot;SvgjsText1224&quot; font-family=&quot;Microsoft Yahei,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1225&quot; transform=&quot;translate(284.5 253)&quot; opacity=&quot;1&quot;&gt;&lt;path id=&quot;SvgjsPath1226&quot; d=&quot;M0 0L242 0L242 50L0 50Z &quot; stroke-dasharray=&quot;none&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#ffffff&quot; opacity=&quot;1&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1227&quot; transform=&quot;matrix(1 0 0 1 10 16.875)&quot; fill=&quot;#ffffff&quot;&gt;&lt;text id=&quot;SvgjsText1228&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;111&quot; y=&quot;14&quot;&gt;Viewing a Model File&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1229&quot;&gt;&lt;path id=&quot;SvgjsPath1230&quot; d=&quot;M405.5 158L405.5 177L405.5 177L405.5 180.7639320225002 &quot; stroke-dasharray=&quot;none&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;none&quot; marker-end=&quot;url(#SvgjsMarker1231)&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1233&quot; transform=&quot;matrix(1 0 0 1 405.5 161.25696601125009)&quot; fill=&quot;#ffffff&quot;&gt;&lt;path id=&quot;SvgjsPath1234&quot; d=&quot;M0 0H0V0H0V0Z &quot; fill=&quot;#ffffff&quot; transform=&quot;translate(0 0)&quot;&gt;&lt;/path&gt;&lt;text id=&quot;SvgjsText1235&quot; font-family=&quot;Microsoft Yahei,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1236&quot; transform=&quot;translate(385.75 196)&quot; opacity=&quot;1&quot;&gt;&lt;path id=&quot;SvgjsPath1237&quot; d=&quot;M0 16L19.75 0L39.5 16L19.75 32Z &quot; stroke-dasharray=&quot;none&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#ffffff&quot; opacity=&quot;1&quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1238&quot;&gt;&lt;path id=&quot;SvgjsPath1239&quot; d=&quot;M405.5 228L405.5 240.5L405.5 240.5L405.5 241.5 &quot; stroke-dasharray=&quot;none&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;none&quot; marker-end=&quot;url(#SvgjsMarker1240)&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1242&quot; transform=&quot;matrix(1 0 0 1 405.5 226.625)&quot; fill=&quot;#ffffff&quot;&gt;&lt;path id=&quot;SvgjsPath1243&quot; d=&quot;M0 0H0V0H0V0Z &quot; fill=&quot;#ffffff&quot; transform=&quot;translate(0 0)&quot;&gt;&lt;/path&gt;&lt;text id=&quot;SvgjsText1244&quot; font-family=&quot;Microsoft Yahei,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1245&quot;&gt;&lt;path id=&quot;SvgjsPath1246&quot; d=&quot;M284.5 278L269.25 278L269.25 319L254 319 &quot; stroke-dasharray=&quot;2 3&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;none&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1247&quot; transform=&quot;matrix(1 0 0 1 269.25 290.375)&quot; fill=&quot;#ffffff&quot;&gt;&lt;path id=&quot;SvgjsPath1248&quot; d=&quot;M0 0H0V0H0V0Z &quot; fill=&quot;#ffffff&quot; transform=&quot;translate(0 0)&quot;&gt;&lt;/path&gt;&lt;text id=&quot;SvgjsText1249&quot; font-family=&quot;Microsoft Yahei,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1250&quot; transform=&quot;translate(76 268)&quot; opacity=&quot;1&quot;&gt;&lt;path id=&quot;SvgjsPath1251&quot; d=&quot;M0 0L178 0L178 102L0 102Z &quot; stroke-dasharray=&quot;2 3&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#ffffff&quot; opacity=&quot;1&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1252&quot; transform=&quot;matrix(1 0 0 1 10 18.5)&quot; fill=&quot;#ffffff&quot;&gt;&lt;text id=&quot;SvgjsText1253&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;79&quot; y=&quot;14&quot;&gt;The Dump() command d&lt;/text&gt;&lt;text id=&quot;SvgjsText1254&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;79&quot; y=&quot;30.25&quot;&gt;umps the node names a&lt;/text&gt;&lt;text id=&quot;SvgjsText1255&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;79&quot; y=&quot;46.5&quot;&gt;nd optionally values to a&lt;/text&gt;&lt;text id=&quot;SvgjsText1256&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;79&quot; y=&quot;62.75&quot;&gt; readable file.&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1257&quot;&gt;&lt;path id=&quot;SvgjsPath1258&quot; d=&quot;M526.5 278L553.75 278L553.75 278L581 278 &quot; stroke-dasharray=&quot;2 3&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;none&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1259&quot; transform=&quot;matrix(1 0 0 1 553.75 269.875)&quot; fill=&quot;#ffffff&quot;&gt;&lt;path id=&quot;SvgjsPath1260&quot; d=&quot;M0 0H0V0H0V0Z &quot; fill=&quot;#ffffff&quot; transform=&quot;translate(0 0)&quot;&gt;&lt;/path&gt;&lt;text id=&quot;SvgjsText1261&quot; font-family=&quot;Microsoft Yahei,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1262&quot; transform=&quot;translate(581 256)&quot; opacity=&quot;1&quot;&gt;&lt;path id=&quot;SvgjsPath1263&quot; d=&quot;M0 0L369 0L369 44L0 44Z &quot; stroke-dasharray=&quot;2 3&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#ffffff&quot; opacity=&quot;1&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1264&quot; transform=&quot;matrix(1 0 0 1 10 5.75)&quot; fill=&quot;#ffffff&quot;&gt;&lt;text id=&quot;SvgjsText1265&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;174.5&quot; y=&quot;14&quot;&gt;DumpModel(model1, “c:\temp\originalModel.dmp”, inc&lt;/text&gt;&lt;text id=&quot;SvgjsText1266&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;174.5&quot; y=&quot;30.25&quot;&gt;ludeData = true)&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1267&quot;&gt;&lt;path id=&quot;SvgjsPath1268&quot; d=&quot;M405.5 303L405.5 323L405.5 323L405.5 327.7639320225002 &quot; stroke-dasharray=&quot;none&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;none&quot; marker-end=&quot;url(#SvgjsMarker1269)&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1271&quot; transform=&quot;matrix(1 0 0 1 405.5 307.25696601125014)&quot; fill=&quot;#ffffff&quot;&gt;&lt;path id=&quot;SvgjsPath1272&quot; d=&quot;M0 0H0V0H0V0Z &quot; fill=&quot;#ffffff&quot; transform=&quot;translate(0 0)&quot;&gt;&lt;/path&gt;&lt;text id=&quot;SvgjsText1273&quot; font-family=&quot;Microsoft Yahei,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1274&quot; transform=&quot;translate(343.25 343)&quot; opacity=&quot;1&quot;&gt;&lt;path id=&quot;SvgjsPath1275&quot; d=&quot;M0 0L124.5 0L124.5 52L0 52Z &quot; stroke-dasharray=&quot;none&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#ffffff&quot; opacity=&quot;1&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1276&quot; transform=&quot;matrix(1 0 0 1 10 17.875)&quot; fill=&quot;#ffffff&quot;&gt;&lt;text id=&quot;SvgjsText1277&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;52.25&quot; y=&quot;14&quot;&gt;Copy Nodes&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1278&quot;&gt;&lt;path id=&quot;SvgjsPath1279&quot; d=&quot;M425.25 212L553.75 212L553.75 369L482.9860679774998 369 &quot; stroke-dasharray=&quot;none&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;none&quot; marker-end=&quot;url(#SvgjsMarker1280)&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1282&quot; transform=&quot;matrix(1 0 0 1 553.75 253.50696601125014)&quot; fill=&quot;#ffffff&quot;&gt;&lt;path id=&quot;SvgjsPath1283&quot; d=&quot;M0 0H0V0H0V0Z &quot; fill=&quot;#ffffff&quot; transform=&quot;translate(0 0)&quot;&gt;&lt;/path&gt;&lt;text id=&quot;SvgjsText1284&quot; font-family=&quot;Microsoft Yahei,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1285&quot;&gt;&lt;path id=&quot;SvgjsPath1286&quot; d=&quot;M343.25 369L326.125 369L326.125 535L309 535 &quot; stroke-dasharray=&quot;2 3&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;none&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1287&quot; transform=&quot;matrix(1 0 0 1 326.125 443.875)&quot; fill=&quot;#ffffff&quot;&gt;&lt;path id=&quot;SvgjsPath1288&quot; d=&quot;M0 0H0V0H0V0Z &quot; fill=&quot;#ffffff&quot; transform=&quot;translate(0 0)&quot;&gt;&lt;/path&gt;&lt;text id=&quot;SvgjsText1289&quot; font-family=&quot;Microsoft Yahei,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1290&quot; transform=&quot;translate(76 410)&quot; opacity=&quot;1&quot;&gt;&lt;path id=&quot;SvgjsPath1291&quot; d=&quot;M0 0L233 0L233 250L0 250Z &quot; stroke-dasharray=&quot;2 3&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#ffffff&quot; opacity=&quot;1&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1292&quot; transform=&quot;matrix(1 0 0 1 10 19.375)&quot; fill=&quot;#ffffff&quot;&gt;&lt;text id=&quot;SvgjsText1293&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;106.5&quot; y=&quot;14&quot;&gt;The first parameter is the source o&lt;/text&gt;&lt;text id=&quot;SvgjsText1294&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;106.5&quot; y=&quot;30.25&quot;&gt;f the copy and must exist, the sec&lt;/text&gt;&lt;text id=&quot;SvgjsText1295&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;106.5&quot; y=&quot;46.5&quot;&gt;ond is the target and may or may&lt;/text&gt;&lt;text id=&quot;SvgjsText1296&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;106.5&quot; y=&quot;62.75&quot;&gt; not exist. If it does exist, those m&lt;/text&gt;&lt;text id=&quot;SvgjsText1297&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;106.5&quot; y=&quot;79&quot;&gt;atching nodes will be overwritten&lt;/text&gt;&lt;text id=&quot;SvgjsText1298&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;106.5&quot; y=&quot;95.25&quot;&gt; by the copy. The optional parame&lt;/text&gt;&lt;text id=&quot;SvgjsText1299&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;106.5&quot; y=&quot;111.5&quot;&gt;ter copy can be used to change t&lt;/text&gt;&lt;text id=&quot;SvgjsText1300&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;106.5&quot; y=&quot;127.75&quot;&gt;his behavior, the options are: all -&lt;/text&gt;&lt;text id=&quot;SvgjsText1301&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;106.5&quot; y=&quot;144&quot;&gt; the default, which copies all node&lt;/text&gt;&lt;text id=&quot;SvgjsText1302&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;106.5&quot; y=&quot;160.25&quot;&gt; data and links, or value - which c&lt;/text&gt;&lt;text id=&quot;SvgjsText1303&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;106.5&quot; y=&quot;176.5&quot;&gt;opies the node values only, leavin&lt;/text&gt;&lt;text id=&quot;SvgjsText1304&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;106.5&quot; y=&quot;192.75&quot;&gt;g the connections between node&lt;/text&gt;&lt;text id=&quot;SvgjsText1305&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;106.5&quot; y=&quot;209&quot;&gt;s (if any) unchanged.&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1306&quot;&gt;&lt;path id=&quot;SvgjsPath1307&quot; d=&quot;M405.5 395L405.5 425.5L503.7639320225002 425.5 &quot; stroke-dasharray=&quot;none&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;none&quot; marker-end=&quot;url(#SvgjsMarker1308)&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1310&quot; transform=&quot;matrix(1 0 0 1 439.38196601125014 417.375)&quot; fill=&quot;#ffffff&quot;&gt;&lt;path id=&quot;SvgjsPath1311&quot; d=&quot;M0 0H0V0H0V0Z &quot; fill=&quot;#ffffff&quot; transform=&quot;translate(0 0)&quot;&gt;&lt;/path&gt;&lt;text id=&quot;SvgjsText1312&quot; font-family=&quot;Microsoft Yahei,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1313&quot; transform=&quot;translate(519 403)&quot; opacity=&quot;1&quot;&gt;&lt;path id=&quot;SvgjsPath1314&quot; d=&quot;M0 0L98 0L98 45L0 45Z &quot; stroke-dasharray=&quot;none&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#ffffff&quot; opacity=&quot;1&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1315&quot; transform=&quot;matrix(1 0 0 1 10 14.375)&quot; fill=&quot;#ffffff&quot;&gt;&lt;text id=&quot;SvgjsText1316&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;39&quot; y=&quot;14&quot;&gt;SetInput&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1317&quot; transform=&quot;translate(645 316)&quot; opacity=&quot;1&quot;&gt;&lt;path id=&quot;SvgjsPath1318&quot; d=&quot;M0 0L305 0L305 61L0 61Z &quot; stroke-dasharray=&quot;2 3&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#ffffff&quot; opacity=&quot;1&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1319&quot; transform=&quot;matrix(1 0 0 1 10 6.125)&quot; fill=&quot;#ffffff&quot;&gt;&lt;text id=&quot;SvgjsText1320&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;start&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;14&quot;&gt;To integrate this new layer into the model, th&lt;/text&gt;&lt;text id=&quot;SvgjsText1321&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;start&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;30.25&quot;&gt;e inputs and outputs of the nodes must&lt;/text&gt;&lt;text id=&quot;SvgjsText1322&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;start&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;46.5&quot;&gt;reset.&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1323&quot;&gt;&lt;path id=&quot;SvgjsPath1324&quot; d=&quot;M568 403L568 346.5L645 346.5 &quot; stroke-dasharray=&quot;2 3&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;none&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1325&quot; transform=&quot;matrix(1 0 0 1 578.25 338.375)&quot; fill=&quot;#ffffff&quot;&gt;&lt;path id=&quot;SvgjsPath1326&quot; d=&quot;M0 0H0V0H0V0Z &quot; fill=&quot;#ffffff&quot; transform=&quot;translate(0 0)&quot;&gt;&lt;/path&gt;&lt;text id=&quot;SvgjsText1327&quot; font-family=&quot;Microsoft Yahei,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1328&quot; transform=&quot;translate(718 402.5)&quot; opacity=&quot;1&quot;&gt;&lt;path id=&quot;SvgjsPath1329&quot; d=&quot;M0 0L232 0L232 46L0 46Z &quot; stroke-dasharray=&quot;2 3&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#ffffff&quot; opacity=&quot;1&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1330&quot; transform=&quot;matrix(1 0 0 1 10 6.75)&quot; fill=&quot;#ffffff&quot;&gt;&lt;text id=&quot;SvgjsText1331&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;start&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;14&quot;&gt;SetInput(L4.*.T, 1, L3.RL) &lt;/text&gt;&lt;text id=&quot;SvgjsText1332&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;start&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;30.25&quot;&gt;# Layer 3 output to Layer 4 input&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1333&quot;&gt;&lt;path id=&quot;SvgjsPath1334&quot; d=&quot;M718 425.5L667.5 425.5L667.5 425.5L617 425.5 &quot; stroke-dasharray=&quot;2 3&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;none&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1335&quot; transform=&quot;matrix(1 0 0 1 667.5 417.375)&quot; fill=&quot;#ffffff&quot;&gt;&lt;path id=&quot;SvgjsPath1336&quot; d=&quot;M0 0H0V0H0V0Z &quot; fill=&quot;#ffffff&quot; transform=&quot;translate(0 0)&quot;&gt;&lt;/path&gt;&lt;text id=&quot;SvgjsText1337&quot; font-family=&quot;Microsoft Yahei,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1338&quot;&gt;&lt;path id=&quot;SvgjsPath1339&quot; d=&quot;M568 448L568 480.5L568 480.5L568 497.7639320225002 &quot; stroke-dasharray=&quot;none&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;none&quot; marker-end=&quot;url(#SvgjsMarker1340)&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1342&quot; transform=&quot;matrix(1 0 0 1 568 464.75696601125014)&quot; fill=&quot;#ffffff&quot;&gt;&lt;path id=&quot;SvgjsPath1343&quot; d=&quot;M0 0H0V0H0V0Z &quot; fill=&quot;#ffffff&quot; transform=&quot;translate(0 0)&quot;&gt;&lt;/path&gt;&lt;text id=&quot;SvgjsText1344&quot; font-family=&quot;Microsoft Yahei,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1345&quot; transform=&quot;translate(390.25 513)&quot; opacity=&quot;1&quot;&gt;&lt;path id=&quot;SvgjsPath1346&quot; d=&quot;M0 0L355.5 0L355.5 44L0 44Z &quot; stroke-dasharray=&quot;none&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#ffffff&quot; opacity=&quot;1&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1347&quot; transform=&quot;matrix(1 0 0 1 10 13.875)&quot; fill=&quot;#ffffff&quot;&gt;&lt;text id=&quot;SvgjsText1348&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;167.75&quot; y=&quot;14&quot;&gt;Adding New Nodes: In-line NDL and NDL Snippets&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1349&quot;&gt;&lt;path id=&quot;SvgjsPath1350&quot; d=&quot;M745.75 535L758.375 535L758.375 535L771 535 &quot; stroke-dasharray=&quot;2 3&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;none&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1351&quot; transform=&quot;matrix(1 0 0 1 758.375 526.875)&quot; fill=&quot;#ffffff&quot;&gt;&lt;path id=&quot;SvgjsPath1352&quot; d=&quot;M0 0H0V0H0V0Z &quot; fill=&quot;#ffffff&quot; transform=&quot;translate(0 0)&quot;&gt;&lt;/path&gt;&lt;text id=&quot;SvgjsText1353&quot; font-family=&quot;Microsoft Yahei,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1354&quot; transform=&quot;translate(771 493)&quot; opacity=&quot;1&quot;&gt;&lt;path id=&quot;SvgjsPath1355&quot; d=&quot;M0 0L179 0L179 84L0 84Z &quot; stroke-dasharray=&quot;2 3&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#ffffff&quot; opacity=&quot;1&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1356&quot; transform=&quot;matrix(1 0 0 1 10 9.5)&quot; fill=&quot;#ffffff&quot;&gt;&lt;text id=&quot;SvgjsText1357&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;start&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;14&quot;&gt;NDL snippet:&lt;/text&gt;&lt;text id=&quot;SvgjsText1358&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;start&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;30.25&quot;&gt;[modelName]=[&lt;/text&gt;&lt;text id=&quot;SvgjsText1359&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;start&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;46.5&quot;&gt;#ndl commands go here&lt;/text&gt;&lt;text id=&quot;SvgjsText1360&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;start&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;62.75&quot;&gt;]&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1361&quot;&gt;&lt;path id=&quot;SvgjsPath1362&quot; d=&quot;M568 557L568 584.5L568 584.5L568 612 &quot; stroke-dasharray=&quot;none&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;none&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1363&quot; transform=&quot;matrix(1 0 0 1 568 576.375)&quot; fill=&quot;#ffffff&quot;&gt;&lt;path id=&quot;SvgjsPath1364&quot; d=&quot;M0 0H0V0H0V0Z &quot; fill=&quot;#ffffff&quot; transform=&quot;translate(0 0)&quot;&gt;&lt;/path&gt;&lt;text id=&quot;SvgjsText1365&quot; font-family=&quot;Microsoft Yahei,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g id=&quot;SvgjsG1366&quot; transform=&quot;translate(518 612)&quot; opacity=&quot;1&quot;&gt;&lt;path id=&quot;SvgjsPath1367&quot; d=&quot;M0 0L100 0L100 48L0 48Z &quot; stroke-dasharray=&quot;none&quot; stroke=&quot;#323232&quot; stroke-width=&quot;2&quot; fill=&quot;#ffffff&quot; opacity=&quot;1&quot;&gt;&lt;/path&gt;&lt;g id=&quot;SvgjsG1368&quot; transform=&quot;matrix(1 0 0 1 10 15.875)&quot; fill=&quot;#ffffff&quot;&gt;&lt;text id=&quot;SvgjsText1369&quot; font-family=&quot;Microsoft Yahei,SimHei,Arial,SimSun&quot; fill=&quot;#000000&quot; font-size=&quot;13&quot; font-weight=&quot;normal&quot; font-style=&quot;normal&quot; text-anchor=&quot;middle&quot; text-decoration=&quot;blink&quot; x=&quot;40&quot; y=&quot;14&quot;&gt;SaveModel&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;
&lt;/svg&gt;
</description>
				<pubDate>Fri, 19 Feb 2016 00:00:00 +0800</pubDate>
				<link>/tools/2016/02/19/cntk.html</link>
				<guid isPermaLink="true">/tools/2016/02/19/cntk.html</guid>
			</item>
		
			<item>
				<title>Correlations</title>
				<description>&lt;p&gt;&lt;a href=&quot;http://www.statsoft.com/Textbook/Basic-Statistics#Correlations&quot;&gt;Origin Link&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;what-is-correlation&quot;&gt;What is Correlation?&lt;/h2&gt;
&lt;p&gt;Correlation is a measure of the relation between two or more variables. The measurement scales used should be at least interval scales, but other correlation coefficients are available to handle other types of data. Correlation coefficients can range from -1.00 to +1.00. The value of -1.00 represents a perfect &lt;code&gt;negative correlation&lt;/code&gt; while a value of +1.00 represents a perfect &lt;code&gt;positive correlation&lt;/code&gt;. A value of 0.00 represents a &lt;code&gt;lack of correlation&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;pearson-correlation.&quot;&gt;Pearson Correlation.&lt;/h2&gt;
&lt;p&gt;The most widely-used type of correlation coefficient is Pearson &lt;strong&gt;r&lt;/strong&gt; (Pearson, 1896), also called &lt;strong&gt;linear or product-moment correlation&lt;/strong&gt; (the term correlation was first used by Galton, 1888). Using non technical language, we can say that the correlation coefficient determines the extent to which values of two variables are “proportional” to each other. The value of the correlation (i.e., correlation coefficient) does not depend on the specific measurement units used; for example, the correlation between height and weight will be identical regardless of whether inches and pounds, or centimeters and kilograms are used as measurement units. &lt;strong&gt;Proportional means linearly related; that is, the correlation is high if it can be approximated by a straight line (sloped upwards or downwards).&lt;/strong&gt; This line is called the regression line or least squares line, because it is determined such that the sum of the squared distances of all the data points from the line is the lowest possible. Pearson correlation assumes that the two variables are measured on at least interval scales.&lt;/p&gt;
&lt;h2 id=&quot;how-to-interpret-the-values-of-correlations.&quot;&gt;How to Interpret the Values of Correlations.&lt;/h2&gt;
&lt;p&gt;As mentioned before, the correlation coefficient (&lt;span class=&quot;math inline&quot;&gt;\(r\)&lt;/span&gt;) represents the linear relationship between two variables. If the correlation coefficient is squared, then the resulting value (&lt;span class=&quot;math inline&quot;&gt;\(r^2\)&lt;/span&gt;, the coefficient of determination) will represent the proportion of common variation in the two variables (i.e., the “strength” or “magnitude” of the relationship).&lt;/p&gt;
</description>
				<pubDate>Sun, 14 Feb 2016 00:00:00 +0800</pubDate>
				<link>/foundation/2016/02/14/correlations.html</link>
				<guid isPermaLink="true">/foundation/2016/02/14/correlations.html</guid>
			</item>
		
			<item>
				<title>ipython cheat sheet</title>
				<description>&lt;p&gt;&lt;img src=&quot;/assets/images/31.png&quot; alt=&quot;&quot; /&gt; &lt;img src=&quot;/assets/images/32.png&quot; alt=&quot;&quot; /&gt; &lt;img src=&quot;/assets/images/33.png&quot; alt=&quot;&quot; /&gt; &lt;img src=&quot;/assets/images/34.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
				<pubDate>Tue, 19 Jan 2016 00:00:00 +0800</pubDate>
				<link>/python/2016/01/19/ipython-cheat-sheet.html</link>
				<guid isPermaLink="true">/python/2016/01/19/ipython-cheat-sheet.html</guid>
			</item>
		
			<item>
				<title>A Neural Conversational Model</title>
				<description>&lt;p&gt;&lt;a href=&quot;http://arxiv.org/abs/1506.05869&quot;&gt;arxiv link&lt;/a&gt;&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;/assets/images/30.png&quot; alt=&quot;&quot; /&gt;
&lt;/figure&gt;
</description>
				<pubDate>Tue, 19 Jan 2016 00:00:00 +0800</pubDate>
				<link>/paper/2016/01/19/a-neural-conversational-model.html</link>
				<guid isPermaLink="true">/paper/2016/01/19/a-neural-conversational-model.html</guid>
			</item>
		
			<item>
				<title>Sublime Text 3 shortcut cheat sheet</title>
				<description>&lt;figure&gt;
&lt;img src=&quot;/assets/images/29.png&quot; alt=&quot;&quot; /&gt;
&lt;/figure&gt;
</description>
				<pubDate>Mon, 11 Jan 2016 00:00:00 +0800</pubDate>
				<link>/tools/2016/01/11/sublime-text-3-shortcut-cheat-sheet.html</link>
				<guid isPermaLink="true">/tools/2016/01/11/sublime-text-3-shortcut-cheat-sheet.html</guid>
			</item>
		
			<item>
				<title>Representation Learning</title>
				<description>&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;\[
ML=Representation + Objective + Optimization
\]&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Power of human brains
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Low&lt;/code&gt; signal speed vs &lt;code&gt;High&lt;/code&gt; computation speed&lt;/li&gt;
&lt;li&gt;&lt;code&gt;High&lt;/code&gt; processing capacity vs &lt;code&gt;Low&lt;/code&gt; energy consumption&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Wed, 30 Dec 2015 00:00:00 +0800</pubDate>
				<link>/others/2015/12/30/representation-learning.html</link>
				<guid isPermaLink="true">/others/2015/12/30/representation-learning.html</guid>
			</item>
		
			<item>
				<title>ipython parallel</title>
				<description>&lt;p&gt;IPython 3.x. Best using in the ipython environment, or in a py file may raising unpredictable error.&lt;/p&gt;
&lt;h2 id=&quot;architecture-overview&quot;&gt;Architecture overview&lt;/h2&gt;
&lt;figure&gt;
&lt;img src=&quot;/assets/images/28.png&quot; alt=&quot;&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;The IPython architecture consists of four components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The IPython engine.&lt;/li&gt;
&lt;li&gt;The IPython hub.&lt;/li&gt;
&lt;li&gt;The IPython schedulers.&lt;/li&gt;
&lt;li&gt;The controller client.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These components live in the &lt;code&gt;IPython.parallel&lt;/code&gt; package and are installed with IPython.&lt;/p&gt;
&lt;h2 id=&quot;getting-started&quot;&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;To use IPython for parallel computing, you need to start one instance of the controller and one or more instances of the engine. Initially, it is best to simply start a controller and engines on a single host using the &lt;code&gt;ipcluster&lt;/code&gt; command. To start a controller and 4 engines on your localhost, just do:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ipcluster start -n 4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once you have started the IPython controller and one or more engines, you are ready to use the engines to do something useful. To make sure everything is working correctly, try the following commands:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;In [&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]: &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; IPython.parallel &lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; Client

In [&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]: c &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Client()

In [&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]: c.ids
Out[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]: &lt;span class=&quot;bu&quot;&gt;set&lt;/span&gt;([&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;])

In [&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]: c[:].apply_sync(&lt;span class=&quot;kw&quot;&gt;lambda&lt;/span&gt; : &lt;span class=&quot;st&quot;&gt;&amp;quot;Hello, World&amp;quot;&lt;/span&gt;)
Out[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]: [ &lt;span class=&quot;st&quot;&gt;&amp;#39;Hello, World&amp;#39;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;Hello, World&amp;#39;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;Hello, World&amp;#39;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;Hello, World&amp;#39;&lt;/span&gt; ]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;ipython-client-and-views&quot;&gt;IPython client and views&lt;/h2&gt;
&lt;p&gt;There is one primary object, the &lt;code&gt;Client&lt;/code&gt;, for connecting to a cluster. For each execution model, there is a corresponding &lt;code&gt;View&lt;/code&gt;. These views allow users to interact with a set of engines through the interface. Here are the two default views:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;DirectView&lt;/code&gt; class for explicit addressing.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;LoadBalancedView&lt;/code&gt; class for destination-agnostic scheduling.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;In [&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]: &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; IPython.parallel &lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; Client
In [&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]: rc &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Client()

&lt;span class=&quot;co&quot;&gt;# for a visible LAN controller listening on an external port:&lt;/span&gt;
In [&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]: rc &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Client(&lt;span class=&quot;st&quot;&gt;&amp;#39;tcp://192.168.1.16:10101&amp;#39;&lt;/span&gt;)
&lt;span class=&quot;co&quot;&gt;# or to connect with a specific profile you have set up:&lt;/span&gt;
In [&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]: rc &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Client(profile&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;mpi&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;directview&quot;&gt;DirectView&lt;/h2&gt;
&lt;p&gt;For direct execution, we will make use of a &lt;code&gt;DirectView&lt;/code&gt; object, which can be constructed via list-access to the client:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;In [&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]: dview &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; rc[:] &lt;span class=&quot;co&quot;&gt;# use all engines&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;parallel-map&quot;&gt;Parallel map&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;In [&lt;span class=&quot;dv&quot;&gt;62&lt;/span&gt;]: serial_result &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;lambda&lt;/span&gt; x:x&lt;span class=&quot;op&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;bu&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;32&lt;/span&gt;))

In [&lt;span class=&quot;dv&quot;&gt;63&lt;/span&gt;]: parallel_result &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; dview.map_sync(&lt;span class=&quot;kw&quot;&gt;lambda&lt;/span&gt; x: x&lt;span class=&quot;op&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;bu&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;32&lt;/span&gt;))

In [&lt;span class=&quot;dv&quot;&gt;67&lt;/span&gt;]: serial_result&lt;span class=&quot;op&quot;&gt;==&lt;/span&gt;parallel_result
Out[&lt;span class=&quot;dv&quot;&gt;67&lt;/span&gt;]: &lt;span class=&quot;va&quot;&gt;True&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;remote-function-decorators&quot;&gt;Remote function decorators&lt;/h3&gt;
&lt;p&gt;Remote functions are just like normal functions, but when they are called, they execute on one or more engines, rather than locally. IPython provides two decorators:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;In [&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;]: @dview.remote(block&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;True&lt;/span&gt;)
   ....: &lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; getpid():
   ....:     &lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; os
   ....:     &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; os.getpid()
   ....:

In [&lt;span class=&quot;dv&quot;&gt;11&lt;/span&gt;]: getpid()
Out[&lt;span class=&quot;dv&quot;&gt;11&lt;/span&gt;]: [&lt;span class=&quot;dv&quot;&gt;12345&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;12346&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;12347&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;12348&lt;/span&gt;]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;@parallel&lt;/code&gt; decorator creates parallel functions, that break up an element-wise operations and distribute them, reconstructing the result.&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;In [&lt;span class=&quot;dv&quot;&gt;12&lt;/span&gt;]: &lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;im&quot;&gt;as&lt;/span&gt; np

In [&lt;span class=&quot;dv&quot;&gt;13&lt;/span&gt;]: A &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; np.random.random((&lt;span class=&quot;dv&quot;&gt;64&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;48&lt;/span&gt;))

In [&lt;span class=&quot;dv&quot;&gt;14&lt;/span&gt;]: @dview.parallel(block&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;True&lt;/span&gt;)
   ....: &lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; pmul(A,B):
   ....:     &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; A&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;B

In [&lt;span class=&quot;dv&quot;&gt;15&lt;/span&gt;]: C_local &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; A&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;A

In [&lt;span class=&quot;dv&quot;&gt;16&lt;/span&gt;]: C_remote &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; pmul(A,A)

In [&lt;span class=&quot;dv&quot;&gt;17&lt;/span&gt;]: (C_local &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; C_remote).&lt;span class=&quot;bu&quot;&gt;all&lt;/span&gt;()
Out[&lt;span class=&quot;dv&quot;&gt;17&lt;/span&gt;]: &lt;span class=&quot;va&quot;&gt;True&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A quick example to illustrate the difference in arguments for the two modes:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;In [&lt;span class=&quot;dv&quot;&gt;16&lt;/span&gt;]: @dview.parallel(block&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;True&lt;/span&gt;)
   ....: &lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; echo(x):
   ....:     &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;str&lt;/span&gt;(x)
   ....:

In [&lt;span class=&quot;dv&quot;&gt;17&lt;/span&gt;]: echo(&lt;span class=&quot;bu&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;))
Out[&lt;span class=&quot;dv&quot;&gt;17&lt;/span&gt;]: [&lt;span class=&quot;st&quot;&gt;&amp;#39;[0, 1]&amp;#39;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;[2]&amp;#39;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;[3]&amp;#39;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;[4]&amp;#39;&lt;/span&gt;]

In [&lt;span class=&quot;dv&quot;&gt;18&lt;/span&gt;]: echo.&lt;span class=&quot;bu&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;bu&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;))
Out[&lt;span class=&quot;dv&quot;&gt;18&lt;/span&gt;]: [&lt;span class=&quot;st&quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;2&amp;#39;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;3&amp;#39;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;4&amp;#39;&lt;/span&gt;]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;calling-python-functions&quot;&gt;&lt;a href=&quot;http://ipython.org/ipython-doc/3/parallel/parallel_multiengine.html#calling-python-functions&quot;&gt;Calling Python functions&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The most basic type of operation that can be performed on the engines is to execute Python code or call Python functions. Executing Python code can be done in blocking or non-blocking mode (non-blocking is default) using the &lt;code&gt;View.execute()&lt;/code&gt; method, and calling functions can be done via the &lt;code&gt;View.apply()&lt;/code&gt; method.&lt;/p&gt;
&lt;h3 id=&quot;moving-python-objects-around&quot;&gt;&lt;a href=&quot;http://ipython.org/ipython-doc/3/parallel/parallel_multiengine.html#moving-python-objects-around&quot;&gt;Moving Python objects around&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&quot;other-things-to-look-at&quot;&gt;&lt;a href=&quot;http://ipython.org/ipython-doc/3/parallel/parallel_multiengine.html#other-things-to-look-at&quot;&gt;Other things to look at&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;how-to-do-parallel-list-comprehensions&quot;&gt;How to do parallel list comprehensions&lt;/h4&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;In [&lt;span class=&quot;dv&quot;&gt;66&lt;/span&gt;]: dview.scatter(&lt;span class=&quot;st&quot;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;,&lt;span class=&quot;bu&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;64&lt;/span&gt;))

In [&lt;span class=&quot;dv&quot;&gt;67&lt;/span&gt;]: &lt;span class=&quot;op&quot;&gt;%&lt;/span&gt;px y &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; [i&lt;span class=&quot;op&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;in&lt;/span&gt; x]
Parallel execution on engines: [&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]

In [&lt;span class=&quot;dv&quot;&gt;68&lt;/span&gt;]: y &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; dview.gather(&lt;span class=&quot;st&quot;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;)

In [&lt;span class=&quot;dv&quot;&gt;69&lt;/span&gt;]: &lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt; y
[&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1024&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;59049&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1048576&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;9765625&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;60466176&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;282475249&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1073741824&lt;/span&gt;,...]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;remote-imports&quot;&gt;Remote imports&lt;/h4&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;In [&lt;span class=&quot;dv&quot;&gt;69&lt;/span&gt;]: &lt;span class=&quot;cf&quot;&gt;with&lt;/span&gt; dview.sync_imports():
   ....:     &lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; numpy
importing numpy on engine(s)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;sync_imports() does not allow import foo as bar syntax, because the assignment represented by the as bar part is not available to the import hook.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;parallel-exceptions&quot;&gt;&lt;a href=&quot;http://ipython.org/ipython-doc/3/parallel/parallel_multiengine.html#parallel-exceptions&quot;&gt;Parallel exceptions&lt;/a&gt;&lt;/h4&gt;
&lt;h2 id=&quot;loadbalancedview&quot;&gt;LoadBalancedView&lt;/h2&gt;
&lt;p&gt;For load-balanced execution, we will make use of a &lt;code&gt;LoadBalancedView&lt;/code&gt; object, which can be constructed via the client’s &lt;code&gt;load_balanced_view()&lt;/code&gt; method:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;In [&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]: lview &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; rc.load_balanced_view() &lt;span class=&quot;co&quot;&gt;# default load-balanced view&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;parallel-map-1&quot;&gt;Parallel map&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;In [&lt;span class=&quot;dv&quot;&gt;62&lt;/span&gt;]: lview.block &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;True&lt;/span&gt;

In [&lt;span class=&quot;dv&quot;&gt;63&lt;/span&gt;]: serial_result &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;lambda&lt;/span&gt; x:x&lt;span class=&quot;op&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;bu&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;32&lt;/span&gt;))

In [&lt;span class=&quot;dv&quot;&gt;64&lt;/span&gt;]: parallel_result &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; lview.&lt;span class=&quot;bu&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;lambda&lt;/span&gt; x:x&lt;span class=&quot;op&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;bu&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;32&lt;/span&gt;))

In [&lt;span class=&quot;dv&quot;&gt;65&lt;/span&gt;]: serial_result&lt;span class=&quot;op&quot;&gt;==&lt;/span&gt;parallel_result
Out[&lt;span class=&quot;dv&quot;&gt;65&lt;/span&gt;]: &lt;span class=&quot;va&quot;&gt;True&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;parallel-function-decorator&quot;&gt;Parallel function decorator&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;In [&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;]: @lview.parallel()
   ....: &lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; f(x):
   ....:     &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;x&lt;span class=&quot;op&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;
   ....:

In [&lt;span class=&quot;dv&quot;&gt;11&lt;/span&gt;]: f.&lt;span class=&quot;bu&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;bu&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;32&lt;/span&gt;))    &lt;span class=&quot;co&quot;&gt;# this is done in parallel&lt;/span&gt;
Out[&lt;span class=&quot;dv&quot;&gt;11&lt;/span&gt;]: [&lt;span class=&quot;fl&quot;&gt;0.0&lt;/span&gt;,&lt;span class=&quot;fl&quot;&gt;10.0&lt;/span&gt;,&lt;span class=&quot;fl&quot;&gt;160.0&lt;/span&gt;,...]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;dependencies&quot;&gt;Dependencies&lt;/h3&gt;
&lt;h4 id=&quot;functional-dependencies&quot;&gt;Functional Dependencies&lt;/h4&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;In [&lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;]: &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; IPython.parallel &lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; depend, require, dependent
In [&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;]: @require(&lt;span class=&quot;st&quot;&gt;&amp;#39;numpy&amp;#39;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;zmq&amp;#39;&lt;/span&gt;)
   ....: &lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; myfunc():
   ....:     &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; dostuff()

In [&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;]: &lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; platform_specific(plat):
   ....:    &lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; sys
   ....:    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; sys.platform &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; plat

In [&lt;span class=&quot;dv&quot;&gt;11&lt;/span&gt;]: @depend(platform_specific, &lt;span class=&quot;st&quot;&gt;&amp;#39;darwin&amp;#39;&lt;/span&gt;)
   ....: &lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; mactask():
   ....:    do_mac_stuff()

In [&lt;span class=&quot;dv&quot;&gt;12&lt;/span&gt;]: @depend(platform_specific, &lt;span class=&quot;st&quot;&gt;&amp;#39;nt&amp;#39;&lt;/span&gt;)
   ....: &lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; wintask():
   ....:    do_windows_stuff()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;graph-dependencies&quot;&gt;Graph Dependencies&lt;/h4&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;In [&lt;span class=&quot;dv&quot;&gt;14&lt;/span&gt;]: client.block&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;False&lt;/span&gt;

In [&lt;span class=&quot;dv&quot;&gt;15&lt;/span&gt;]: ar &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; lview.&lt;span class=&quot;bu&quot;&gt;apply&lt;/span&gt;(f, args, kwargs)

In [&lt;span class=&quot;dv&quot;&gt;16&lt;/span&gt;]: ar2 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; lview.&lt;span class=&quot;bu&quot;&gt;apply&lt;/span&gt;(f2)

In [&lt;span class=&quot;dv&quot;&gt;17&lt;/span&gt;]: &lt;span class=&quot;cf&quot;&gt;with&lt;/span&gt; lview.temp_flags(after&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;[ar,ar2]):
   ....:    ar3 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; lview.&lt;span class=&quot;bu&quot;&gt;apply&lt;/span&gt;(f3)

In [&lt;span class=&quot;dv&quot;&gt;18&lt;/span&gt;]: &lt;span class=&quot;cf&quot;&gt;with&lt;/span&gt; lview.temp_flags(follow&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;[ar], timeout&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;2.5&lt;/span&gt;)
   ....:    ar4 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; lview.&lt;span class=&quot;bu&quot;&gt;apply&lt;/span&gt;(f3)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
				<pubDate>Tue, 29 Dec 2015 00:00:00 +0800</pubDate>
				<link>/python/2015/12/29/ipython-parallel.html</link>
				<guid isPermaLink="true">/python/2015/12/29/ipython-parallel.html</guid>
			</item>
		
			<item>
				<title>python note</title>
				<description>&lt;h2 id=&quot;python-pip&quot;&gt;python pip&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;python pip&lt;/code&gt;的安装,&lt;a href=&quot;https://pip.pypa.io/en/latest/installing.html&quot; class=&quot;uri&quot;&gt;https://pip.pypa.io/en/latest/installing.html&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;升级pip：命令行下运行 python -m pip install -U pip&lt;/li&gt;
&lt;li&gt;用pip安装package：python -m pip install &lt;em&gt;package_name&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;package_name 在&lt;a href=&quot;https://pypi.python.org/pypi&quot; class=&quot;uri&quot;&gt;https://pypi.python.org/pypi&lt;/a&gt;搜索&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;module-search-path&quot;&gt;Module Search Path&lt;/h2&gt;
&lt;p&gt;When a module named spam is imported, the interpreter first searches for a built-in module with that name. If not found, it then searches for a file named spam.py in a list of directories given by the variable &lt;code&gt;sys.path&lt;/code&gt;. sys.path is initialized from these locations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the directory containing the input script (or the current directory).&lt;/li&gt;
&lt;li&gt;PYTHONPATH (a list of directory names, with the same syntax as the shell variable PATH).&lt;/li&gt;
&lt;li&gt;the installation-dependent default.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;dir&quot;&gt;dir()&lt;/h2&gt;
&lt;p&gt;he built-in function dir() is used to find out which names a module defines. It returns a sorted list of strings dir() does not list the names of built-in functions and variables. If you want a list of those, they are defined in the standard module &lt;code&gt;__builtin__&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; __builtin__
&lt;span class=&quot;bu&quot;&gt;dir&lt;/span&gt;(__builtin__)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
				<pubDate>Mon, 28 Dec 2015 00:00:00 +0800</pubDate>
				<link>/python/2015/12/28/python-note.html</link>
				<guid isPermaLink="true">/python/2015/12/28/python-note.html</guid>
			</item>
		
			<item>
				<title>Maximum Entropy Model</title>
				<description>&lt;p&gt;&lt;a href=&quot;http://www.zhizhihu.com/html/y2011/3500.html&quot;&gt;原文链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;设随机变量&lt;span class=&quot;math inline&quot;&gt;\(\xi\)&lt;/span&gt;，他有&lt;span class=&quot;math inline&quot;&gt;\(A_1,A_2...A_n\)&lt;/span&gt;共&lt;span class=&quot;math inline&quot;&gt;\(n\)&lt;/span&gt;个不同的取值，每个取值出现的概率为&lt;span class=&quot;math inline&quot;&gt;\(p_1,p_2...p_n\)&lt;/span&gt;，那么&lt;span class=&quot;math inline&quot;&gt;\(\xi\)&lt;/span&gt;的不确定度，即信息熵为： &lt;span class=&quot;math display&quot;&gt;\[
H(\xi)=\sum_{i=1}^n p_i log_2{1 \over p_i}=-\sum_{i=1}^n p_i log_2 p_i
\]&lt;/span&gt; 熵越大，越不确定。熵为0，事件是确定的，例如抛硬币，每次事件发生的概率都是1/2的话，那么熵为1，即&lt;span class=&quot;math inline&quot;&gt;\(H(X)=-(0.5log_2 0.5+0.5log_2 0.5)=1\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最大熵原理指出，当我们需要对一个随机事件的概率分布进行预测时，我们的预测应当满足全部已知的条件，而对未知的情况不要做任何主观假设。在这种情况下，概率分布最均匀，预测的风险最小。因为这时概率分布的信息熵最大，所以人们称这种模型叫“最大熵模型”。我们常说，不要把所有的鸡蛋放在一个篮子里，其实就是最大熵原理的一个朴素的说法，因为当我们遇到不确定性时，就要保留各种可能性。说白了，就是要保留全部的不确定性，将风险降到最小。—-摘自《Google黑板报》作者：吴军&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;自然语言处理的例子：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;“学习”这个词可能是动词，也可能是名词。可以可以被标为主语、谓语、宾语、定语…… 令&lt;span class=&quot;math inline&quot;&gt;\(x_1\)&lt;/span&gt;表示“学习”被标为名词，&lt;span class=&quot;math inline&quot;&gt;\(x_2\)&lt;/span&gt;表示“学习”被标为动词。令&lt;span class=&quot;math inline&quot;&gt;\(y_1\)&lt;/span&gt;表示“学习”被标为主语，&lt;span class=&quot;math inline&quot;&gt;\(y_2\)&lt;/span&gt;表示被标为谓语，&lt;span class=&quot;math inline&quot;&gt;\(y_3\)&lt;/span&gt;表示宾语，&lt;span class=&quot;math inline&quot;&gt;\(y_4\)&lt;/span&gt;表示定语。得到下面的表示： &lt;span class=&quot;math display&quot;&gt;\[
p(x_1)+p(x_2)=1
\]&lt;/span&gt;&lt;span class=&quot;math display&quot;&gt;\[
\sum_{i=1}^4 p(y_i)=1
\]&lt;/span&gt; 如果没有其他的知识，根据信息熵的理论，概率趋向于均匀。所以有： &lt;span class=&quot;math display&quot;&gt;\[
p(x_1)=p(x_2)=0.5
\]&lt;/span&gt;&lt;span class=&quot;math display&quot;&gt;\[
p(y_1)=p(y_2)=p(y_3)=p(y_4)=0.25
\]&lt;/span&gt; 但是在实际情况中，“学习”被标为定语的可能性很小，只有0.05。我们引入这个新的知识：&lt;span class=&quot;math inline&quot;&gt;\(p(y_4)=0.05\)&lt;/span&gt;，在满足了这个约束的情况下，其他的事件我们尽可能的让他们符合自然，符合均匀分布： &lt;span class=&quot;math display&quot;&gt;\[
p(x_1)=p(x_2)=0.5
\]&lt;/span&gt;&lt;span class=&quot;math display&quot;&gt;\[
p(y_1)=p(y_2)=p(y_3)=0.953
\]&lt;/span&gt; 嗯，如果再加入一个知识，当“学习”被标作动词的时候，它被标作谓语的概率为0.95，这个其实是很自然的事情。都已经是动词了，那么是谓语的可能性就很大了： &lt;span class=&quot;math display&quot;&gt;\[
p(y_2|x_2)=0.95
\]&lt;/span&gt; 已经有了两个知识了，第二个还是条件概率的知识，那么其他的我们尽可能的让他们不受约束，不受影响，分布的均匀一些，现在应该怎么让他们符合尽可能的均匀分布呢？&lt;/p&gt;
&lt;p&gt;其实就是使熵尽可能的大就行了。也就是有个分布&lt;span class=&quot;math inline&quot;&gt;\(p\)&lt;/span&gt;，他尽可能的把训练集中的知识表示出来，损失最小，并且还能够保证&lt;span class=&quot;math inline&quot;&gt;\(p\)&lt;/span&gt;的熵最大： &lt;span class=&quot;math display&quot;&gt;\[
p^*=\mathop{argmax}\limits_p H(p)
\]&lt;/span&gt;&lt;/p&gt;
</description>
				<pubDate>Sun, 27 Dec 2015 00:00:00 +0800</pubDate>
				<link>/foundation/2015/12/27/maximum-entropy-model.html</link>
				<guid isPermaLink="true">/foundation/2015/12/27/maximum-entropy-model.html</guid>
			</item>
		
	</channel>
</rss>
